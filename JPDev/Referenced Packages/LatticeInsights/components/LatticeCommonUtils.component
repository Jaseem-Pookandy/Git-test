<apex:component >
    <script language="javascript" runat="server">
        LatticeCommon = {
            setupEnhancedList: function (component, page) {
                component['selected'+page+'Id'] = null;
                if ($('table.x-grid3-row-table').length > 0 && $('.selected-row').length == 0) {
                    setTimeout(function () {
                        new LatticeListControl('body');
                        LatticeListControl.initializeList();
                    }, 1);
                } else {
                    // Need to handle when there are no opportunity in the list
                    // TODO: May want to do something other than just hiding the IFrame
                    $('#latticeIframe').hide();
                }
            },
            
            getId: function (el) {
                var id = null,
                    attr = el.find('.x-grid3-cell-inner').attr('id'),
                    index = attr.indexOf("_");
                
                if (index > 0) {
                    id = attr.substring(0, index);
                }
                
                return LatticeCommon.convertSalesforceId(id);
            },
            
            getAccountLinkField: function (accountId, linkField) {
                var accountDfd = $.Deferred();
                var accountField = linkField;
                accountDfd.resolve(accountField);
                return accountDfd.promise();
            },
            
            getRemoteItem: function (callback, id) {
                var deferred = $.Deferred();
                
                Visualforce.remoting.Manager.invokeAction(
                    callback,
                    id,
                    function(result, event) {
                        var ret = null;
                        
                        if (event.status) {
                             ret = result;
                        }
                        
                        deferred.resolve(ret);
                    },
                    { escape: true }
                );
                
                return deferred.promise();
            },
            
            // Takes in the 15 digit case sensitive ID and returns the 18 digit case insensitive version
            // Original algorithm found at http://www.adminbooster.com/tool/15to18
            convertSalesforceId: function (id) {
                if(id != null && id.length == 15) {
                    var modifier = "";
                    
                    for(var i=0;i<3; i++){
                        var f=0;
                        for(var j=0;j<5;j++){
                            var c=id.charAt(i*5+j);
                            if(c>="A" && c<="Z")f+=1<<j;
                        }
                        modifier+="ABCDEFGHIJKLMNOPQRSTUVWXYZ012345".charAt(f);
                    }
                    id += modifier;
                }
                return id;
            }
        };
    </script>
</apex:component>