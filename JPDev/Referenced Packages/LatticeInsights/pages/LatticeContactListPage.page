<apex:page controller="latticeforleads.LatticeLeadListController">
    <apex:enhancedList type="Contact" height="425" rowsPerPage="25" id="contactList" 
        oncomplete="LatticeContactMainControl.onContactListComplete()"
    />

    <c:LatticeCommonUtils />
    <c:LatticeEnhancedList page="Contact" />
    
    <script src="/soap/ajax/24.0/connection.js" type="text/javascript"></script>
    <script language="javascript" runat="server">
        LatticeContactMainControl = can.Control.extend({
            selectedContactId: null,
            
            onContactListComplete: function () {
                LatticeCommon.setupEnhancedList(LatticeContactMainControl, 'Contact');
                if ($('table.x-grid3-row-table').length > 0 && $('.selected-row').length == 0) {
                    setTimeout(function () {
                        LatticeListControl.initializeList();
                    }, 1);
                } else {
                    // Need to handle when there are no contacts in the list
                    // TODO: May want to do something other than just hiding the IFrame
                    $('#latticeIframe').hide();
                }
            },
            
            showContactInDanteView: function ($contactRow) {
                if ($contactRow == null || $contactRow.length == 0) {
                    return;
                }
                
                var contactId = LatticeCommon.getId($contactRow);
                var accountIdDfd = LatticeCommon.getRemoteItem(
                    '{!$RemoteAction.LatticeLeadListController.getAccountIdForContact}',
                    contactId
                );
                $.when(accountIdDfd).then(function (result) {
                    var accountId = result;
                    LatticeContactMainControl.selectedContactId = contactId;
                    
                    var baseLatticeUrl = "{!latticeUrl}";
                    var $latticeIframe = $("#latticeIframe");
                    $latticeIframe.show();
                    if ($latticeIframe.attr('src') == null) {
                        var latticeUrl = baseLatticeUrl + "?sin={!$Api.Session_ID}";
                        latticeUrl += "&serverurl={!$Api.Partner_Server_URL_90}"; 
                        latticeUrl += "&Directory=salesforce&userlink={!$User.Id}";
                        latticeUrl += "&Contact=" + contactId;
                        latticeUrl += "&HasSalesprism={!isSalesprismInstalled}";
                        latticeUrl += "&CustomSettings=" + encodeURIComponent('{!customSettings}');
                        if (accountId != null) {
                            latticeUrl += "&Account=" + accountId;
                        }
                        $latticeIframe.attr('src', latticeUrl);
                    } else {
                        // Send a message to Dante that a new contact has been selected
                        var latticeContentWindow = document.getElementById("latticeIframe").contentWindow;
                        if (latticeContentWindow != null) {
                            var crmSelectedEvent = "CrmContactSelectedEvent=" + contactId;
                            if (accountId != null) {
                                    crmSelectedEvent += "?AccountID=" + accountId;
                            }
                            latticeContentWindow.postMessage(crmSelectedEvent, baseLatticeUrl);
                        }
                    }
                });
            },
        },{
            // Instance
            init: function(element, options) {
                // Listen for when our Dante sends postMessage events
                window.addEventListener('message', function (evt) {
                    if (evt && evt.data.indexOf("IsLeadActiveEvent") !== -1) {
                        var separatorIndex = evt.data.indexOf("=");
                        var contactId = evt.data.substring(separatorIndex + 1, evt.data.length);
                        var contactDfd = LatticeCommon.getRemoteItem(
                            '{!$RemoteAction.LatticeLeadListController.getContactById}',
                            contactId
                        );
                        $.when(contactDfd).then(function (result) {
                            var contact = result;
                            var isActive = !contact.IsDeleted; 
                            var message = "IsLeadActiveReturnEvent=" + contact.Id + "?isActive=" + isActive;
                            evt.source.postMessage(message , evt.origin);
                        });
                    } else if (evt && evt.data.indexOf("GoToSalesprismAccountEvent") !== -1) {
                        var separatorIndex = evt.data.indexOf("=");
                        var accountId = evt.data.substring(separatorIndex + 1, evt.data.length);
                        
                        var salesforceHost = window.location.host;
                        var latticeForLeadsPrefix = salesforceHost.indexOf("latticeforleads.");
                        if (latticeForLeadsPrefix !== -1) {
                            salesforceHost = salesforceHost.substring(16, salesforceHost.length);
                        }
                        
                        var accountDfd = LatticeCommon.getRemoteItem(
                            '{!$RemoteAction.LatticeLeadListController.getAccountLinkField}',
                            accountId
                        );
                        $.when(accountDfd).then(function (result) {
                            var accountField = result;
                            var salesprismUrl = window.location.protocol + "//salesprism." + salesforceHost +
                                "/apex/salesPRISM?sfdc.tabName=salesPRISM&Account=" + accountField;
                            window.open(salesprismUrl, "_blank");
                        });
                    }
                }, false);
            }
        });
        
        new LatticeContactMainControl('body');
  </script>
</apex:page>