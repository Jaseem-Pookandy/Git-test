<apex:component allowDML="true" controller="zqu.ProductSelectorController">
  <apex:attribute name="injectedController" type="zqu.ProductSelectorController" description="Controller for product selector component"/>
  <apex:attribute name="display" type="Boolean" default="true" description="Display the product selector panel or not by default"/>
  
      <apex:outputPanel id="productSelectorPanel" html-data-id="productSelectorPanel" style="{!IF(display, 'display:block', 'display:none')}" >
        <span id="productSelectorPanelIdSpan" style="display:none">{!injectedController.Id}</span>
        <apex:outputPanel html-data-id="{!injectedController.Id}_productSelectorPanel" layout="block" styleClass="{!injectedController.backgroundCls}">

        <img id="{!injectedController.Id}_saveOk" class="{!injectedController.saveOkCls}" src="{!$Resource.IconSaveOk}" title="{!$Label.SELECT_PRODUCT_ITEM_SAVED}"/>
        <img id="{!injectedController.Id}_saveAlert" class="{!injectedController.saveAlertCls}" src="{!$Resource.IconSaveAlert}" title="{!$Label.SELECT_PRODUCT_ITEM_NOT_SAVED}"/>
        <img id="{!injectedController.Id}_loading" class="hideSaveIndicator" src="{!$Resource.loading}"/>
        <span id="{!injectedController.Id}_status" class="{!injectedController.statusCls}">{!injectedController.statusText}</span>
        <span id="{!injectedController.Id}_message" class="messageCls" style="{!IF(AND(injectedController.message != '', injectedController.status == 'original'), 'display:block;', 'display:none')}">
          <apex:outputPanel >{!injectedController.message}</apex:outputPanel>
          <apex:outputPanel rendered="{!AND(injectedController.productRatePlanlist != null, injectedController.productRatePlanlist.size > 0)}">
            <apex:outputLabel styleClass="replaceOptionLabel" value="{!$Label.SELECT_PRODUCT_CHOOSE_REPLACED_RATE_PLAN}"/>
            <select id="{!injectedController.Id}_replacedRatePlanSelectList" onchange="ProductSelector.selectReplacedRatePlan(this.options[this.selectedIndex], '{!injectedController.Id}', '{!injectedController.productId}', '{!JSENCODE(injectedController.productName)}', '{!JSENCODE(injectedController.productDescription)}');">
              <option value="empty" label="{!$Label.SELECT_PRODUCT_SELECT_RATE_PLAN}" description="">{!$Label.SELECT_PRODUCT_SELECT_RATE_PLAN}</option>
              <apex:repeat value="{!injectedController.productRatePlanlist}" var="productRatePlan">
                <option value="{!productRatePlan.Id}" label="{!productRatePlan.Name}" description="{!productRatePlan.Description__c}">{!productRatePlan.Name}</option>
              </apex:repeat>
            </select>
          </apex:outputPanel>
        </span>
          
          <table id="productSelectorGrid">
            <tr class="productSelectorRow">
              <td style="width: 5%;">
                <apex:outputLabel styleClass="productSelectorLabel">{!$Label.SELECT_PRODUCT_LABEL_PRODUCT}</apex:outputLabel>
              </td>
              <td style="width: 5%;">
                <apex:outputPanel rendered="{!AND(injectedController.isEditMode, injectedController.status=='added', NOT(injectedController.isGuidedSellingEnabled))}" id="productLookupComponent" layout="block" styleClass="lookupComponentPanel">
                  <c:LookupComponent options="{!injectedController.productSelectLookupOptions}"></c:LookupComponent>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!OR(NOT(injectedController.isEditMode), injectedController.status!='added', injectedController.isGuidedSellingEnabled)}" html-data-id="{!injectedController.Id}_productName" layout="block" styleClass="lookupComponentPanel displayedText">{!injectedController.productName}</apex:outputPanel>
              </td>
              <td style="width: 5%;">
                <apex:outputLabel styleClass="productSelectorLabel">{!$Label.SELECT_PRODUCT_LABEL_DESCRIPTION}</apex:outputLabel>
              </td>
              <td>
                <apex:outputPanel id="productDescription" html-data-id="{!injectedController.Id}_productDescription" layout="block" styleClass="displayedText">{!injectedController.productDescription}</apex:outputPanel>
              </td>
            </tr>
            <tr class="productSelectorRow" style="{!if(isFeatureEnabled, '', 'display:none;')}">
              <td style="padding-top: 5px; vertical-align: top; text-align: right;">
                <div id="{!injectedController.Id}_expandFeature" style="display:inline;">
                  <apex:image url="{!$Resource.zqu__open}" onclick="showProductFeature('{!injectedController.Id}', {!injectedController.isEditMode});"/>
                </div>
                <div id="{!injectedController.Id}_collapseFeature" style="display:none;"> 
                  <apex:image url="{!$Resource.zqu__close}" onclick="ProductSelector.hideProductFeature('{!injectedController.Id}');"/>
                </div>
                <apex:outputLabel style="margin-right: 10px;">{!$Label.SELECT_PRODUCT_LABEL_FEATURES}</apex:outputLabel>
              </td>
              <td colspan="3">
                <div id="{!injectedController.Id}_featureList" style="display:none">
                  <apex:outputPanel html-data-id="{!injectedController.Id}_featureListPanel"> 
                    <table id="{!injectedController.Id}_featureTable" />
                  </apex:outputPanel>
                    <button id="{!injectedController.Id}_add_feature_btn" style="display:{!IF(AND(injectedController.isEditMode, injectedController.allowFeatureChanges), 'block', 'none')}" onclick="showAvailableNewFeatures('{!injectedController.Id}'); return false;">{!$Label.BUTTON_ADD_FEATURES}</button>
                </div>
                <div id="{!injectedController.Id}_message" style="display:none; margin:5px !important;" class="messageCls">
                  {!$Label.SELECT_PRODUCT_SELECT_A_PRODUCT_FIRST}
                </div>
              </td>
            </tr>
            <tr class="productSelectorRow">
              <td style="width: 5%;">
                <apex:outputLabel styleClass="productSelectorLabel">{!$Label.SELECT_PRODUCT_LABEL_RATE_PLAN}</apex:outputLabel>
              </td>
              <td style="width: 5%;">
                <apex:outputPanel rendered="{!AND(injectedController.isEditMode, injectedController.status=='added', NOT(injectedController.isGuidedSellingEnabled))}" id="ratePlanLookupComponent" layout="block" styleClass="lookupComponentPanel">
                  <c:LookupComponent options="{!injectedController.ratePlanSelectLookupOptions}"></c:LookupComponent>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!OR(NOT(injectedController.isEditMode), injectedController.status!='added', injectedController.isGuidedSellingEnabled)}" html-data-id="{!injectedController.Id}_ratePlanName" layout="block" styleClass="lookupComponentPanel displayedText">{!injectedController.ratePlanName}</apex:outputPanel>
              </td>
              <td style="width: 5%;">
                <apex:outputLabel styleClass="productSelectorLabel">{!$Label.SELECT_PRODUCT_LABEL_DESCRIPTION}</apex:outputLabel>
              </td>
              <td>
                <apex:outputPanel id="ratePlanDescription" html-data-id="{!injectedController.Id}_ratePlanDescription" layout="block" styleClass="displayedText">{!injectedController.ratePlanDescription}</apex:outputPanel>
              </td>
            </tr>
          </table>
          
          <apex:outputPanel id="ratePlanChargePanel" >
            <apex:outputPanel html-data-id="{!injectedController.Id}_ratePlanChargePanel" styleClass="ratePlanChargeTableOuterPanel"> 
                <table id="{!injectedController.Id}_ratePlanChargeTable" />
            </apex:outputPanel>
            <button id="{!injectedController.Id}_undo_btn" onclick="validateRemoveProduct(this, '{!injectedController.Id}', {!injectedController.isGuidedSellingEnabled}, {!IF(injectedController.message != '', true, false)}); return false;" style="{!IF(AND(injectedController.isEditMode, injectedController.status!='added', injectedController.status!='original'), '', 'display:none')}">{!$Label.BUTTON_UNDO}</button>
            <button id="{!injectedController.Id}_remove_btn_for_updated" onclick="validateRemoveProduct(this, '{!injectedController.Id}', {!injectedController.isGuidedSellingEnabled}); return false;" style="display:none">{!$Label.BUTTON_REMOVE}</button>
            <button id="{!injectedController.Id}_remove_btn_for_original" onclick="validateRemoveProduct(this, '{!injectedController.Id}', {!injectedController.isGuidedSellingEnabled}); return false;" style="{!IF(AND(injectedController.isEditMode, injectedController.status=='original'), '', 'display:none')}">{!$Label.BUTTON_REMOVE}</button>
            <button id="{!injectedController.Id}_remove_btn" onclick="validateRemoveProduct(this, '{!injectedController.Id}', {!injectedController.isGuidedSellingEnabled}); return false;" style="{!IF(AND(injectedController.isEditMode, injectedController.status=='added'), '', 'display:none')}">{!$Label.BUTTON_REMOVE}</button>
            <button class='{!injectedController.Id}TierTree' onclick="ProductSelector.tierTreeOperation({!injectedController.Id}, false); return false;" style="{!IF(injectedController.hasTiers, '', 'display:none')}" >{!$Label.Tiers_Expand_All}</button>
            <button class='{!injectedController.Id}TierTree' onclick="ProductSelector.tierTreeOperation({!injectedController.Id}, true); return false;" style="{!IF(injectedController.hasTiers, '', 'display:none')}">{!$Label.Tiers_Collapse_All}</button>
          </apex:outputPanel>
        </apex:outputPanel>
        
        <apex:outputPanel rendered="{!AND(injectedController.isEditMode, NOT(injectedController.isGuidedSellingEnabled))}">
        <script>
          
          function onChange{!injectedController.productSelectLookupOptions.Id} (value, label, record, previousValue, previousLabel) {
            if({!isRulesEngineEnabled}){
              var changedProduct = {};
              changedProduct.id = '{!injectedController.Id}_product_changed';
              changedProduct.value = value;
              changedProduct.label = label;
              changedProduct.record = record;
              changedProduct.previousValue = previousValue;
              changedProduct.previousLabel = previousLabel;
              validateRemoveProduct(changedProduct, '{!injectedController.Id}', {!injectedController.isGuidedSellingEnabled}, false);
            }
            else{
              modify{!injectedController.productSelectLookupOptions.Id}(value, label, record, true);
            }
          }
          
          function onChange{!injectedController.ratePlanSelectLookupOptions.Id} (value, label, record, previousValue, previousLabel) {
            
            // Set rate plan description
            var ratePlanDescription = $jq("div[data-id='{!injectedController.Id}_ratePlanDescription']");
            // Get previous description
            var previousDescription = ratePlanDescription[0].innerHTML;
            
            if(record.{!injectedController.namespace}Description__c != undefined)
              ratePlanDescription[0].innerHTML = record.{!injectedController.namespace}Description__c;
            else
              ratePlanDescription[0].innerHTML = "";
            
            // Remove data stored on the page
            if(productSelectorsAllData['{!injectedController.Id}'] != undefined && productSelectorsAllData['{!injectedController.Id}'].saved){
              productSelectorsAllData.removedData.push(productSelectorsAllData['{!injectedController.Id}']);
              
              var saveOkIcon = $jq("img[id='" + '{!injectedController.Id}' + "_saveOk']");
              saveOkIcon.removeClass();
              saveOkIcon.addClass('hideSaveIndicator');
              
              var saveAlertIcon = $jq("img[id='" + '{!injectedController.Id}' + "_saveAlert']");
              saveAlertIcon.removeClass();
              saveAlertIcon.addClass('showSaveIndicator');
              
            }
            // Store the previous product selector data
            var previousProductSelectorData = productSelectorsAllData['{!injectedController.Id}'];
            
            // Clear data from productSelectorsAllData
            productSelectorsAllData['{!injectedController.Id}'] = {};
            
            if(value != ""){
              var previousSelection = {'value':previousValue, 'label':previousLabel, 'description':previousDescription, 'previousProductSelectorData':previousProductSelectorData};
              // Render rate plan charge list
              changeRatePlan('{!injectedController.Id}', value, {!injectedController.isEditMode}, '{!injectedController.status}', previousSelection);
            }
            else{
              // Remove rate plan charge list
              var ratePlanChargeTable = $jq("table[id='{!injectedController.Id}_ratePlanChargeTable']");
              ratePlanChargeTable.removeClass();
              var ratePlanChargeTableContent = ratePlanChargeTable.children();
              ratePlanChargeTableContent.remove();
              
            }
          }
          
          function modify{!injectedController.productSelectLookupOptions.Id}(value, label, record, loadProductFeatures){
            // Change context parameters for rate plan lookup component
            if(SelectRatePlan{!injectedController.Id}.optionParameters.indexOf("productId") != -1){
              var paramForRatePlan = "productId=" + value + ";";
              {!injectedController.ratePlanSelectLookupOptions.Id}.optionParameters = {!injectedController.ratePlanSelectLookupOptions.Id}.optionParameters.replace(/productId=.*?;/, paramForRatePlan);
            }
            
            // Clear rate plan lookup component value
            var backgroundPanel = $jq("div[data-id='{!injectedController.Id}_productSelectorPanel']");
            var ratePlanLookupComponentDiv = $jq("div[id$='ratePlanLookupComponent']", backgroundPanel);
            
            var ratePlanNameElement = $jq("input[id$='targetName']", ratePlanLookupComponentDiv)[0];
            var ratePlanNameDisplayElement = $jq("input[id$='targetNameDisplay']", ratePlanLookupComponentDiv)[0];
            var ratePlanIdElement = $jq("input[id$='targetId']", ratePlanLookupComponentDiv)[0];
            ratePlanNameElement.value = '';
            ratePlanNameDisplayElement.value = '';
            ratePlanIdElement.value = '';
            
            onChange{!injectedController.ratePlanSelectLookupOptions.Id}(ratePlanIdElement.value, ratePlanNameElement.value, {});
            
            // Set product description
            var productDescription = $jq("div[data-id='{!injectedController.Id}_productDescription']");
            if(record.{!injectedController.namespace}Description__c != undefined)
              productDescription[0].innerHTML = record.{!injectedController.namespace}Description__c;
            else
              productDescription[0].innerHTML = "";
              
            if({!isFeatureEnabled}){
              // Store product id to expand feature list
              if(productFeaturesAllData['{!injectedController.Id}'] == undefined)
                productFeaturesAllData['{!injectedController.Id}'] = {};
              productFeaturesAllData['{!injectedController.Id}'].productId = value;
              if(record.{!injectedController.namespace}Allow_Feature_Changes__c != undefined){
                productFeaturesAllData['{!injectedController.Id}'].allowFeatureChanges = record.{!injectedController.namespace}Allow_Feature_Changes__c;
              }
              else{
                productFeaturesAllData['{!injectedController.Id}'].allowFeatureChanges = false;
              }
              productFeaturesAllData['{!injectedController.Id}'].productFeatures = [];
              productFeaturesAllData['{!injectedController.Id}'].productFeaturesLoaded = false;
              ProductSelector.hideProductFeature('{!injectedController.Id}');
              
              if(value != "" && loadProductFeatures){
                showProductFeature('{!injectedController.Id}', {!injectedController.isEditMode});
              }
              
            }
          }
          
          function customizedClearFunction{!injectedController.productSelectLookupOptions.Id}(){
            var clearIcon = {'id': '{!injectedController.Id}_product_clear_icon'};
            validateRemoveProduct(clearIcon, '{!injectedController.Id}', {!injectedController.isGuidedSellingEnabled}, false);
          }
          
          function customizedClearFunction{!injectedController.ratePlanSelectLookupOptions.Id}(){
            var clearIcon = {'id': '{!injectedController.Id}_rateplan_clear_icon'};
            validateRemoveProduct(clearIcon, '{!injectedController.Id}', {!injectedController.isGuidedSellingEnabled}, false);
          }
        </script>
        </apex:outputPanel>
        
        <script>
          
          // Show existing charge list
          $jq(function(){
              if('{!injectedController.zChargeGroupId}' != ''){
                 if(productSelectorsAllData['{!injectedController.Id}'] == undefined){
                   productSelectorsAllData['{!injectedController.Id}'] = {};
                 }
                 var zcList = $jq.evalJSON('{!injectedController.existingZChargeJSON}');
                 var editable = {!injectedController.isEditMode};
                 if('{!injectedController.status}' == 'removed')
                   editable = false;
                 ProductSelector.showRatePlanChargeList('{!namespace}', '{!injectedController.Id}', '{!injectedController.ratePlanId}', zcList, false, editable, '{!injectedController.quote.Id}', '{!injectedController.quoteType}', {!injectedController.hasPermissionForCustomTier}, '{!injectedController.status}');
                 productSelectorsAllData['{!injectedController.Id}'].saved = true;
                 productSelectorsAllData['{!injectedController.Id}'].zChargeGroupId = '{!injectedController.zChargeGroupId}';
                 
                 if({!isFeatureEnabled}){
                   // Load quote product features data
                   if(productFeaturesAllData['{!injectedController.Id}'] == undefined)
                     productFeaturesAllData['{!injectedController.Id}'] = {};
                   productFeaturesAllData['{!injectedController.Id}'].productId = '{!injectedController.productId}';
                   productFeaturesAllData['{!injectedController.Id}'].allowFeatureChanges = {!injectedController.allowFeatureChanges};

                   
                   if('{!JSENCODE(injectedController.existingQuoteProductFeatureListJSON)}' != '')
                      productFeaturesAllData['{!injectedController.Id}'].productFeatures = $jq.evalJSON('{!JSENCODE(injectedController.existingQuoteProductFeatureListJSON)}');
                   else
                     productFeaturesAllData['{!injectedController.Id}'].productFeatures = [];
                   productFeaturesAllData['{!injectedController.Id}'].productFeaturesLoaded = true;
                   
                   ProductSelector.initFeatureDataTable('{!injectedController.Id}', productFeaturesAllData['{!injectedController.Id}'].productFeatures, editable, productFeaturesAllData['{!injectedController.Id}'].allowFeatureChanges);
                 }
                 
                 // Make text strikethrough for removed rate plan panel
                 if(productSelectorsAllData['{!injectedController.Id}'].status == 'removed'){
                   $jq('.displayedText',$jq("div[data-id='"+ '{!injectedController.Id}' +"_productSelectorPanel']")).addClass('strikethrough');
                 }
              }
            }
          )
          
        </script>
        
      </apex:outputPanel>
    
</apex:component>