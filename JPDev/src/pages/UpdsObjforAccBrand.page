<apex:page controller="UpdsObjforAccBrandController">
   
    <apex:form id="theform">
        
        <apex:actionstatus id="counterstatus">
                    <apex:facet name="start">
                        <span style="color: red; font-weight: bold; padding-left: 5px;">Processing
                            ...</span>
                        <img src="/img/loading.gif" alt="" />
                    </apex:facet>
                    <apex:facet name="stop">
                    </apex:facet>
                </apex:actionstatus>
        <apex:pageBlock id="theblock" title="Auto-populate Account Brand" >
            
            <apex:pageBlockSection columns="2" id="thecasesection"  collapsible="false" title="Case Object" >
                               
                <b>
                  Total Number of Case records with no Account Brand 
                </b> 
                <apex:outputpanel id="casecountpanel">              
                
                <apex:commandButton value="Find out!" id="Casecountbtn" action="{!countcase}" status="counterstatus" rerender="casecountpanel" rendered="{!casecountflag}"/>
                
                <apex:outputtext value="{!totalcases}" rendered="{!!casecountflag}"/>
                </apex:outputpanel>
                <b>Please input the total number of Case records to be processed</b> <apex:inputText value="{!totalcasebatchsize}" id="thecaseinput"/> 
                
                <input type="button" value="Execute!" onclick="validatecase();" id="thecasebutton" class="btn"/>
                  
                <apex:actionfunction name="runcasebatch" action="{!runbatchupdforcases}" rerender="" oncomplete="hidecasebutton();"/>
                
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="2" id="thecfsection" collapsible="false" title="Customer Feedback">
            <b>
                  Total Number of Customer Feedback records with no Account Brand
                </b> 
                <apex:outputpanel id="customerfeedbackpanel">
                    <apex:commandbutton value="Find Out!" id="cfcountbtn" action="{!countcustomerfeedback}" status="counterstatus" rerender="customerfeedbackpanel" rendered="{!customerfeedbackflag}"/>
                <apex:outputText value="{!totalcustomerfeedback}" rendered="{!!customerfeedbackflag}"/>
                </apex:outputpanel>
                 
             <b>Please input the total number of Customer Feedback records to be processed</b> <apex:inputText value="{!totalcfbatchsize}" id="thecfinput"/>   
                <input type="button" value="Execute!" onclick="validatecf();" id="thecfbutton" class="btn"/>
                  
                <apex:actionfunction name="runcfbatch" action="{!runbatchupdforcustomerfeedback}" rerender="" oncomplete="hidecfbutton();"/>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="2" id="thezlineitemsection" collapsible="false" title="zContract Line Item">
            <b>
                  Total Number of zContract Line Item records with no Account Brand
                </b> 
                <apex:outputpanel id="zlineitempanel">
                    <apex:commandbutton value="Find Out!" id="zlineitemcountbtn" action="{!countzlineitem}" status="counterstatus" rerender="zlineitempanel" rendered="{!zlineitemflag}"/>
                <apex:outputText value="{!totalzlineitem}" rendered="{!!zlineitemflag}"/>
                </apex:outputpanel>
                 
             <b>Please input the total number of zContract Line Item records to be processed</b> <apex:inputText value="{!totalzlineitembatchsize}" id="thezlineiteminput"/>   
                <input type="button" value="Execute!" onclick="validatezlineitem();" id="thezlineitembutton" class="btn"/>
                  
                <apex:actionfunction name="runzlineitembatch" action="{!runbatchupdforzlineitem}" rerender="" oncomplete="hidezlineitembutton();"/>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="2" id="theopenactivitysection" collapsible="false" title="Open Activites">
            <b>
                  Total Number of Open Activity records with no Account Brand
                </b> 
                <apex:outputpanel id="openactivitypanel">
                    <apex:commandbutton value="Find Out!" id="openactivitycountbtn" action="{!countopenactivity}" status="counterstatus" rerender="openactivitypanel" rendered="{!activitiesopenflag}"/>
                <apex:outputText value="{!totalactivitiesopen}" rendered="{!!activitiesopenflag}"/>
                </apex:outputpanel>
                
                <b>Please input the total number of Open Activity records to be processed</b> <apex:inputText value="{!totalactivitiesopenbatchsize}" id="theopenactivityinput"/>   
                <input type="button" value="Execute non-recurring!" onclick="validateopenactivity(false);" id="theopenactivitybutton" class="btn"/>
                <input type="button" value="Execute recurring!"  onclick="validateopenactivity(true);" id="theopenactivitybuttonnew" class="btn"/>
                <apex:actionfunction name="runopenactiviybatch" action="{!runbatchupdforopenactivities}" rerender="" oncomplete="hideopenactivitybutton();">
                	<apex:param id="theparamopen" name="recurrence" value="" assignto="{!isrecurrence}"/>
                </apex:actionfunction>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="2" id="theclosedactivitysection" collapsible="false" title="Closed Activites">
            <b>
                  Total Number of Closed Activity records with no Account Brand
                </b> 
                <apex:outputpanel id="closedactivitypanel">
                    <apex:commandbutton value="Find Out!" id="closedactivitycountbtn" action="{!countclosedactivity}" status="counterstatus" rerender="closedactivitypanel" rendered="{!activitiesclosedflag}"/>
                <apex:outputText value="{!totalactivitiesclosed}" rendered="{!!activitiesclosedflag}"/>
                </apex:outputpanel>
                
                <b>Please input the total number of closed Activity records to be processed</b> <apex:inputText value="{!totalactivitiesclosedbatchsize}" id="theclosedactivityinput"/>   
                <input type="button" value="Execute non-recurring!" onclick="validateclosedactivity(false);" id="theclosedactivitybutton" class="btn"/>
                <input type="button" value="Execute recurring!" onclick="validateclosedactivity(true);" id="theclosedactivitybuttonnew" class="btn"/> 
                <apex:actionfunction name="runclosedactiviybatch" action="{!runbatchupdforclosedactivities}" rerender="" oncomplete="hideclosedactivitybutton();">
                	<apex:param id="theparamclosed" name="recurrence" value="" assignto="{!isrecurrence}"/>
                </apex:actionfunction>
            </apex:pageBlockSection>
            <br/>
            <apex:pageBlockSection title="NOTES" columns="1" Collapsible="false">
              <p style="font-family:verdana;">  1) Please go to SETUP > MONITOR > JOBS > APEX JOBS to confirm your batch is processing/complete. Don't hit Execute! button if any batch is already processing.</p>
              <p style="font-family:verdana;">  2) The Execute! button under Open Activities will kick off two batches,Task and Event. The total number of records to be processed input will be applied to each batch.</p>
            </apex:pageBlockSection> 
           </apex:pageblock>
    </apex:form>
    <script type="text/javascript">
            function validatecase() {
              var val = document.getElementById('{!$Component.theform.theblock.thecasesection.thecaseinput}').value;
                if(val !=null && val != ''){
                    if(confirm('About to process '+val+' case records. Are you sure to continue?')){
                        alert('Processing '+val+' Case records. Your button will disappear in a moment and it will be hidden until you refresh the page. Please check the Apex Jobs log under Monitor to make sure your batch is complete before you execute another batch of records');
                        runcasebatch();
                        
                    }
               }else alert ('Please enter the number of Case records you would like to process');
            }
            function validatecf(){
                 var val = document.getElementById('{!$Component.theform.theblock.thecfsection.thecfinput}').value;
                 if(val !=null && val != ''){
                    if(confirm('About to process '+val+' customer feedback records. Are you sure to continue?')){
                        alert('Processing '+val+' Customer Feedback records. Your button will disappear in a moment and it will be hidden until you refresh the page. Please check the Apex Jobs log under Monitor to make sure your batch is complete before you execute another batch of records');
                        runcfbatch();
                        
                    }
               	}else alert ('Please enter the number of customer feedback records you would like to process');
            }
            function validatezlineitem(){
                 var val = document.getElementById('{!$Component.theform.theblock.thezlineitemsection.thezlineiteminput}').value;
                 if(val !=null && val != ''){
                    if(confirm('About to process '+val+' zContract Line Item records. Are you sure to continue?')){
                        alert('Processing '+val+' zContract Line Item records. Your button will disappear in a moment and it will be hidden until you refresh the page. Please check the Apex Jobs log under Monitor to make sure your batch is complete before you execute another batch of records');
                        runzlineitembatch();
                        
                    }
               	}else alert ('Please enter the number of zContract Line Item records you would like to process');
            }
            function validateopenactivity(isrecurrence){
                 var val = document.getElementById('{!$Component.theform.theblock.theopenactivitysection.theopenactivityinput}').value;
                 if(val !=null && val != ''){
                    if(confirm('About to process '+val+' Open Activity records. Are you sure to continue?')){
                        alert('Processing '+val+' Open Activity records. Your button will disappear in a moment and it will be hidden until you refresh the page. Please check the Apex Jobs log under Monitor to make sure your batch is complete before you execute another batch of records');
                        runopenactiviybatch(isrecurrence);
                        
                    }
               	}else alert ('Please enter the number of Open activity records you would like to process');
            }
            function validateclosedactivity(isrecurrence){
                 var val = document.getElementById('{!$Component.theform.theblock.theclosedactivitysection.theclosedactivityinput}').value;
                 if(val !=null && val != ''){
                    if(confirm('About to process '+val+' closed Activity records. Are you sure to continue?')){
                        alert('Processing '+val+' closed Activity records. Your button will disappear in a moment and it will be hidden until you refresh the page. Please check the Apex Jobs log under Monitor to make sure your batch is complete before you execute another batch of records');
                        runclosedactiviybatch(isrecurrence);
                        
                    }
               	}else alert ('Please enter the number of closed activity records you would like to process');
            }
            function hidecasebutton(){
                    document.getElementById('thecasebutton').style.visibility = 'hidden';
                    
                }
            function hidecfbutton(){
                    document.getElementById('thecfbutton').style.visibility = 'hidden';
                    
                }
           function hidezlineitembutton(){
           			document.getElementById('thezlineitembutton').style.visibility = 'hidden';
           }
 			function hideopenactivitybutton(){
           			document.getElementById('theopenactivitybutton').style.visibility = 'hidden';
           			document.getElementById('theopenactivitybuttonnew').style.visibility = 'hidden';
           }
           function hideclosedactivitybutton(){
           			document.getElementById('theclosedactivitybutton').style.visibility = 'hidden';
           			document.getElementById('theclosedactivitybuttonnew').style.visibility = 'hidden';
           }
             
        </script>
</apex:page>