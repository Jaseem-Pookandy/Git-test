<apex:page standardController="Webstore_Order__c" extensions="WebstoreProcessController" id="WSProcessPg">
    <script type="text/javascript" src="/js/functions.js"></script>
	<script src="/soap/ajax/28.0/connection.js"></script>
	<script src="/soap/ajax/28.0/apex.js"></script>

	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

	<script>
	    var oldURL = '';
		var j$ = jQuery.noConflict();
		   j$(document).ready(function() {
		    oldURL = document.referrer;
		});        

 	</script>

	<apex:form id="form">
		<h1>Processing....</h1>
    </apex:form> 
    <script>
		function init() 
		{                
        	sforce.connection.sessionId = '{!$Api.Session_ID}';
        	var webstoreId = '{!Webstore_Order__c.Id}';



		var accountName = "{!Webstore_Order__c.Account__c}";
		var contactName = "{!Webstore_Order__c.Contact__c}";
		var userGroupName = "{!Webstore_Order__c.User_Group__c}"; 
		var GroupIdAssigned = "{!Webstore_Order__c.External_Account_ID__c}";
		var brandName = "Dice";  
		var myquery = null;  
		var result = null;
		var accountId = null;
		var contactTypeId = null;
		var proceed = true;
		var isNewAccount = false;
		var AccountBrand = new sforce.SObject("Account_Brand__c");
		var webstoreId = "{!Webstore_Order__c.Id}";

		if( accountName != "" && contactName != "" && userGroupName  != "")
		{
		  alert("All reference objects have been assigned");
		  proceed = false;
		}
		else if("{!Webstore_Order__c.Email__c}" == "")
		{
		  alert("Email Address is required");
		  proceed = false;
		}
		else if("{!Webstore_Order__c.Initial_Term__c}" == "")
		{
		  alert("Initial Term is required");
		  proceed = false;
		}
		else
		{
		  var webstore = new sforce.SObject("Webstore_Order__c");
		  webstore.Id = "{!Webstore_Order__c.Id}";
		  var street = ("{!Webstore_Order__c.Address_Line_1__c}").trim();
		  if("{!Webstore_Order__c.Address_Line_2__c}" != "")
		  {
		    street = street + ", " + ("{!Webstore_Order__c.Address_Line_2__c}").trim();
		  }

		  if(accountName == "")
		  {
		    isNewAccount = true;
		    var newAccount = new sforce.SObject("Account");
		    newAccount.BillingCity = "{!Webstore_Order__c.City__c}";
		    newAccount.BillingCountry = "{!Webstore_Order__c.Country__c}";
		    newAccount.BillingPostalCode = "{!Webstore_Order__c.Postal_Code__c}";
		    newAccount.BillingState = "{!Webstore_Order__c.State__c}";
		    newAccount.BillingStreet = street;
		    newAccount.CurrencyIsoCode = "{!Webstore_Order__c.CurrencyIsoCode}";
		    newAccount.Name = "{!Webstore_Order__c.Company__c}";
		    newAccount.Phone = "{!Webstore_Order__c.Phone__c}";
		    newAccount.ShippingCity = "{!Webstore_Order__c.City__c}";
		    newAccount.ShippingCountry = "{!Webstore_Order__c.Country__c}";
		    newAccount.ShippingPostalCode = "{!Webstore_Order__c.Postal_Code__c}";
		    newAccount.ShippingState = "{!Webstore_Order__c.State__c}";
		    newAccount.ShippingStreet = street;
		    newAccount.ShippingState = "{!Webstore_Order__c.State__c}";
		    newAccount.ShippingStreet = street;
		    result = sforce.connection.create([newAccount]);
		 
		    if (result[0].getBoolean("success")) 
		    {
		      accountId  = result[0].id;
		      webstore.Account__c = result[0].id;
		    }
		    else
		    {
		      alert("failed to create an account " + result[0]);
		      proceed = false;
		    }
		  }
		  else
		  {
		     try
		     {
		        myquery = "SELECT Account__c FROM Webstore_Order__c WHERE Id = '" + webstoreId + "'";
		        result = sforce.connection.query(myquery);
		        records = result.getArray("records");
		     }
		     catch (error)
		     {
		        alert(error.faultstring);
		        proceed = false;
		     }

		    if(result.size != 0)
		    {
		      webstore.Account__c = records[0].Account__c;
		    } 
		    else
		    {
		      alert("failed to retrieve account " + accountName + " - " + result[0]);
		      proceed = false;
		    }
		  }

		  try
		  {
		    myquery = "SELECT id FROM Account_Brand__c WHERE Brand_Name__c = '";
		    myquery = myquery + brandName + "' AND Account__c = '" + webstore.Account__c;
		    myquery = myquery + "'";
		    result = sforce.connection.query(myquery);
		    records = result.getArray("records");
		  }
		  catch (error)
		  {
		    alert(error.faultstring);
		    proceed = false;
		  }
		  if(result.size != 0)
		  {
		    webstore.Account_Brand__c = records[0].Id;
		  } 
		  else
		  {
		    alert("failed to retrieve Account Brand - " + result[0]);
		    proceed = false;
		  }

		  if(contactName == "")
		  { 
		    var newContact = new sforce.SObject("Contact");
		    newContact.AccountId = webstore.Account__c;
		    newContact.CurrencyIsoCode = "{!Webstore_Order__c.CurrencyIsoCode}";
		    newContact.Email = "{!Webstore_Order__c.Email__c}"; 
		    newContact.Fax = "{!Webstore_Order__c.Fax__c}"; 
		    newContact.FirstName = "{!Webstore_Order__c.First_Name__c}";
		    newContact.LastName = "{!Webstore_Order__c.Last_Name__c}"; 
		    newContact.MailingCity = "{!Webstore_Order__c.City__c}";
		    newContact.MailingCountry = "{!Webstore_Order__c.Country__c}"; 
		    newContact.MailingPostalCode = "{!Webstore_Order__c.Postal_Code__c}"; 
		    newContact.MailingState = "{!Webstore_Order__c.State__c}";
		    newContact.MailingStreet = street ; 
		    newContact.Phone = "{!Webstore_Order__c.Phone__c}";
		    result = sforce.connection.create([newContact]);
		 
		    if (result[0].getBoolean("success")) 
		    {
		      webstore.Contact__c = result[0].id;
		      try
		      {
		        myquery = "SELECT Id FROM Contact_Type__c WHERE Contact__c = '";
		        myquery = myquery  + webstore.Contact__c + "' AND Account_Brand__c = '";
		        myquery = myquery  + webstore.Account_Brand__c + "'";
		        result = sforce.connection.query(myquery);
		        records = result.getArray("records");
		        if(result.size != 0)
		        {
		          var contactType = new sforce.SObject("Contact_Type__c");
		          contactType.Id = records[0].Id;
		          contactType.Type__c = "Main Sales Contact";
		          result = sforce.connection.update([contactType]);
		        } 
		      }
		      catch (error)
		      {
		        alert(error.faultstring);
		        proceed = false;
		      }
		    } 
		    else 
		    {
		      alert("failed to create contact " + result[0]);
		      proceed = false;
		    }
		  }
		  if(userGroupName == "")
		  { 
		    var newUserGroup = new sforce.SObject("User_Group__c");
		    newUserGroup.Account__c = webstore.Account__c;
		    newUserGroup.Company_Display_Name__c = "{!Webstore_Order__c.Company__c}";
		    newUserGroup.CurrencyIsoCode = "{!Webstore_Order__c.CurrencyIsoCode}";
		    newUserGroup.Description__c = "{!Webstore_Order__c.City__c}" + " " + "{!Webstore_Order__c.State__c}" + " " + "{!Webstore_Order__c.Country__c}";
		    try
		    {
		      myquery = "SELECT Id FROM User_Group__c WHERE Group_Id_Assigned__c = '";
		      myquery = myquery  + GroupIdAssigned + "'";
		      result = sforce.connection.query(myquery);
		      records = result.getArray("records");
		    }
		    catch (error)
		    {
		        alert(error.faultstring);
		        proceed = false;
		    }
		    if(result.size == 0)
		    {
		      newUserGroup.Group_Id_Assigned__c = GroupIdAssigned; 
		    }
		    else
		    {
		      newUserGroup.Group_Id_Assigned__c = null;
		    }
		    newUserGroup.Name = "{!Webstore_Order__c.Company__c}";
		    result = sforce.connection.create([newUserGroup]);
		 
		    if (result[0].getBoolean("success")) 
		    {
		      webstore.User_Group__c = result[0].id;
		    } 
		    else 
		    {
		      alert("failed to create User Group " + result[0]);
		      proceed = false;
		    }

		  }
		  
		  if(proceed)
		  {
		    result = sforce.connection.update([webstore]); 
		    if(isNewAccount)
		    {
		      AccountBrand.Id = webstore.Account_Brand__c;
		      AccountBrand.Rank__c = "Rank 3";
		      AccountBrand.hasNeeds__c = "Yes";
		      AccountBrand.Primary_Recipient__c = webstore.Contact__c;
		      result = sforce.connection.update([AccountBrand]);
		    }
		    if (result[0] && result[0].getBoolean("success")) 
		    {
		        javascript:document.location.reload(true);
		    } 
		    else 
		    {
		      alert("failed to update the Webstore " + result[0]);
		      proceed = false;
		    }
		  }
		}


			window.location.href = oldURL; 
		}

		var previousOnload = window.onload;        
		window.onload = function() 
		{ 
			if (previousOnload) 
			{ 
				previousOnload();
			}
			init();
		}
	</script>	
</apex:page>